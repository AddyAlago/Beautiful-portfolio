{"uid":"c16533a6b009c94e","name":"test_rate_limit_behavior","fullName":"tests.test_rate_limit#test_rate_limit_behavior","historyId":"f91d2b29d3fdc5fceca8a2bd51fc4ae7","time":{"start":1761343294152,"stop":1761343294156,"duration":4},"description":"\n    Deterministic: queries /ratelimit/info to discover the cap,\n    then sends cap+2 requests to guarantee a 429, and verifies Retry-After.\n    ","descriptionHtml":"<pre><code>Deterministic: queries /ratelimit/info to discover the cap,\nthen sends cap+2 requests to guarantee a 429, and verifies Retry-After.\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: Could not read /ratelimit/info\nassert 404 == 200\n +  where 404 = <Response [404]>.status_code","statusTrace":"api_client = <tests.utils.http_client.APIClient object at 0x7f3bebef5850>\n\n    def test_rate_limit_behavior(api_client):\n        \"\"\"\n        Deterministic: queries /ratelimit/info to discover the cap,\n        then sends cap+2 requests to guarantee a 429, and verifies Retry-After.\n        \"\"\"\n        endpoint = os.getenv(\"RATE_LIMIT_ENDPOINT\", \"/ratelimit\")\n    \n        # discover threshold\n        info = api_client.get(f\"{endpoint}/info\")\n>       assert info.status_code == 200, f\"Could not read {endpoint}/info\"\nE       AssertionError: Could not read /ratelimit/info\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\ntests/test_rate_limit.py:22: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"api_client","time":{"start":1761343294152,"stop":1761343294152,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pytestconfig","time":{"start":1761343294152,"stop":1761343294152,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1761343294152,"stop":1761343294152,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_token","time":{"start":1761343294152,"stop":1761343294152,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n    Deterministic: queries /ratelimit/info to discover the cap,\n    then sends cap+2 requests to guarantee a 429, and verifies Retry-After.\n    ","status":"failed","statusMessage":"AssertionError: Could not read /ratelimit/info\nassert 404 == 200\n +  where 404 = <Response [404]>.status_code","statusTrace":"api_client = <tests.utils.http_client.APIClient object at 0x7f3bebef5850>\n\n    def test_rate_limit_behavior(api_client):\n        \"\"\"\n        Deterministic: queries /ratelimit/info to discover the cap,\n        then sends cap+2 requests to guarantee a 429, and verifies Retry-After.\n        \"\"\"\n        endpoint = os.getenv(\"RATE_LIMIT_ENDPOINT\", \"/ratelimit\")\n    \n        # discover threshold\n        info = api_client.get(f\"{endpoint}/info\")\n>       assert info.status_code == 200, f\"Could not read {endpoint}/info\"\nE       AssertionError: Could not read /ratelimit/info\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\ntests/test_rate_limit.py:22: AssertionError","steps":[{"name":"GET http://localhost:8000/ratelimit/info [404] in 3.02ms","time":{"start":1761343294156,"stop":1761343294156,"duration":0},"status":"passed","steps":[],"attachments":[{"uid":"fc03a2011f235a13","name":"request_headers","source":"fc03a2011f235a13.txt","type":"text/plain","size":70},{"uid":"655fc411d8267e00","name":"response_body","source":"655fc411d8267e00.json","type":"application/json","size":22}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"subSuite","value":"API"},{"name":"parentSuite","value":"API"},{"name":"suite","value":"API"},{"name":"epic","value":"API Testing Showcase"},{"name":"tag","value":"ratelimit"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2464-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_rate_limit"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":["ratelimit"]},"source":"c16533a6b009c94e.json","parameterValues":[]}